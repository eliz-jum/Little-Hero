{"basePath": "/api", "swagger": "2.0", "paths": {"/v1/avatar-item-links/": {"get": {"tags": ["v1/avatar-item-links"], "summary": "Returns list of avatar-item links or filtered list of links given avatar id or item id", "operationId": "get_avatar_item_collection", "parameters": [{"description": "For filtering by item id", "name": "item_id", "type": "string", "in": "query"}, {"description": "For filtering by item state", "name": "state", "type": "string", "in": "query"}, {"description": "For filtering by avatar id", "name": "avatar_id", "type": "string", "in": "query"}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Avatar-Item entity"}, "type": "array"}}}}, "post": {"tags": ["v1/avatar-item-links"], "summary": "Create avatar", "operationId": "post_avatar_item_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Avatar-Item for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Avatar-Item entity"}}, "201": {"description": "Avatar-Item link created."}}}}, "/v1/avatar-item-links/{id}": {"patch": {"tags": ["v1/avatar-item-links"], "summary": "Update avatar_item entity given only its parameters that should be updated", "operationId": "patch_avatar_item", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Avatar-Item entity for patch request"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Avatar-Item updated"}, "404": {"description": "Avatar-Item link not found"}}}, "parameters": [{"description": "The avatar identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/avatar-item-links"], "summary": "Returns avatar-item entity", "operationId": "get_avatar_item", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Avatar-Item entity"}}, "404": {"description": "Avatar-Item link not found"}}}, "delete": {"tags": ["v1/avatar-item-links"], "summary": "Delete a avatar-item entity given its identifier", "operationId": "delete_avatar_item", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Avatar-Item deleted"}, "404": {"description": "Avatar-Item link not found"}}}}, "/v1/avatars/": {"get": {"tags": ["v1/avatars"], "summary": "Returns list of avatars or filtered list of avatars given child id or tutor id", "operationId": "get_avatars_collection", "parameters": [{"description": "For filtering by tutor id", "name": "tutor_id", "type": "string", "in": "query"}, {"description": "For filtering by child id", "name": "child_id", "type": "string", "in": "query"}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Avatar entity"}, "type": "array"}}}}, "post": {"tags": ["v1/avatars"], "summary": "Create avatar", "operationId": "post_avatars_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Avatar for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Avatar entity"}}, "201": {"description": "Avatar created."}}}}, "/v1/avatars/{avatar_id}/notifications": {"parameters": [{"description": "The avatar identifier", "name": "avatar_id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/avatars"], "summary": "Returns list of notifications", "operationId": "get_avatar_notifications_collection", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Full notification"}, "type": "array"}}, "404": {"description": "Avatar not found"}}}, "post": {"tags": ["v1/avatars"], "summary": "Create notifications", "operationId": "post_avatar_notifications_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Notification for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Full notification"}}, "404": {"description": "Avatar not found"}, "201": {"description": "Notification created."}}}}, "/v1/avatars/{avatar_id}/notifications/{notification_id}": {"patch": {"tags": ["v1/avatars"], "summary": "Update status of notification", "operationId": "patch_avatar_notification", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Notification for patch"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Notification updated"}, "404": {"description": "Avatar or notification not found"}}}, "parameters": [{"description": "The avatar identifier", "name": "avatar_id", "required": true, "type": "integer", "in": "path"}, {"description": "The notification identifier", "name": "notification_id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/avatars"], "summary": "Return notification", "operationId": "get_avatar_notification", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Full notification"}}, "404": {"description": "Avatar or notification not found"}}}, "delete": {"tags": ["v1/avatars"], "summary": "Delete an notification given its identifier", "operationId": "delete_avatar_notification", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Notification deleted"}, "404": {"description": "Avatar or notification not found"}}}}, "/v1/avatars/{id}": {"patch": {"tags": ["v1/avatars"], "summary": "Update Avatar given only its parameters that should be updated", "operationId": "patch_avatar", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Avatar entity for patch request"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Avatar updated"}, "404": {"description": "Avatar not found"}}}, "parameters": [{"description": "The avatar identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/avatars"], "summary": "Returns avatar", "operationId": "get_avatar", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Avatar entity"}}, "404": {"description": "Avatar not found"}}}, "delete": {"tags": ["v1/avatars"], "summary": "Delete a avatar given its identifier", "operationId": "delete_avatar", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Avatar deleted"}, "404": {"description": "Avatar not found"}}}}, "/v1/children/": {"get": {"tags": ["v1/children"], "summary": "Returns list of children", "operationId": "get_children_collection", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Child entity"}, "type": "array"}}}}, "post": {"tags": ["v1/children"], "summary": "Create child", "operationId": "post_children_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Child for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Child entity"}}, "201": {"description": "Child created."}}}}, "/v1/children/{child_id}/invitations/{invitation_id}": {"patch": {"tags": ["v1/children"], "summary": "Update status of invitation", "operationId": "patch_child_invitation", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Invitation for patch"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Invitation updated"}, "404": {"description": "Child not found"}}}, "parameters": [{"description": "The child identifier", "name": "child_id", "required": true, "type": "integer", "in": "path"}, {"description": "The invitation identifier", "name": "invitation_id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/children"], "summary": "Return invitation", "operationId": "get_child_invitation", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Invitation entity"}}, "404": {"description": "Child not found"}}}, "delete": {"tags": ["v1/children"], "summary": "Delete an invitation given its identifier", "operationId": "delete_child_invitation", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Invitation deleted"}, "404": {"description": "Child not found"}}}}, "/v1/children/{id}": {"patch": {"tags": ["v1/children"], "summary": "Update child given only its parameters that should be updated", "operationId": "patch_child", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Child entity for patch request"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Child updated"}, "404": {"description": "Child not found"}}}, "parameters": [{"description": "The child identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/children"], "summary": "Returns child", "operationId": "get_child", "security": [{"Basic": []}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Child entity"}}, "404": {"description": "Child not found"}}}, "delete": {"tags": ["v1/children"], "summary": "Delete a child given its identifier", "operationId": "delete_child", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Child deleted"}, "404": {"description": "Child not found"}}}}, "/v1/children/{id}/invitations": {"parameters": [{"description": "The child identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/children"], "summary": "Returns list of invitations", "operationId": "get_child_invitations_collection", "parameters": [{"description": "For filtering by status of invitation", "name": "status", "type": "string", "in": "query"}, {"description": "For filtering by type of invitation", "name": "kind", "type": "string", "in": "query"}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Invitation entity"}, "type": "array"}}, "404": {"description": "Child not found"}}}, "post": {"tags": ["v1/children"], "summary": "Create invitations", "operationId": "post_child_invitations_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Child invitation for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Invitation entity"}}, "404": {"description": "Child not found"}, "201": {"description": "Invitation created."}}}}, "/v1/children/{id}/tutors": {"parameters": [{"description": "The child identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/children"], "operationId": "get_child_tutors", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Tutor entity"}, "type": "array"}}, "404": {"description": "Child not found"}}}}, "/v1/documentation/": {"get": {"tags": ["v1/documentation"], "operationId": "get_documentation", "responses": {"200": {"description": "Success"}}}}, "/v1/items/": {"put": {"tags": ["v1/items"], "summary": "Bulk update items", "operationId": "put_items_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"items": {"$ref": "#/definitions/Item for post"}, "type": "array"}}], "responses": {"400": {"description": "Bad request"}, "204": {"description": "No content"}}}, "get": {"tags": ["v1/items"], "summary": "Returns list of items", "operationId": "get_items_collection", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Item entity"}, "type": "array"}}}}, "post": {"tags": ["v1/items"], "summary": "Create item", "operationId": "post_items_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Item for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Item entity"}}, "201": {"description": "Item created."}}}}, "/v1/items/{id}": {"patch": {"tags": ["v1/items"], "summary": "Update item given only its parameters that should be updated", "operationId": "patch_item", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Item entity for patch request"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "item updated"}, "404": {"description": "Item not found"}}}, "parameters": [{"description": "The item identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/items"], "summary": "Returns item", "operationId": "get_item", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Item entity"}}, "404": {"description": "Item not found"}}}, "delete": {"tags": ["v1/items"], "summary": "Delete a item given its identifier", "operationId": "delete_item", "responses": {"400": {"description": "Bad request"}, "204": {"description": "item deleted"}, "404": {"description": "Item not found"}}}}, "/v1/tasks/": {"get": {"tags": ["v1/tasks"], "summary": "Returns list of tasks or filtered list of task given avatar id or tutor id", "operationId": "get_tasks_collection", "parameters": [{"description": "For filtering by tutor id", "name": "tutor_id", "type": "string", "in": "query"}, {"description": "For filtering by avatar id", "name": "avatar_id", "type": "string", "in": "query"}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Task entity"}, "type": "array"}}}}, "post": {"tags": ["v1/tasks"], "summary": "Create task", "operationId": "post_tasks_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Task for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Task entity"}}, "201": {"description": "task created."}}}}, "/v1/tasks/{id}": {"patch": {"tags": ["v1/tasks"], "summary": "Update task given only its parameters that should be updated", "operationId": "patch_task", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Task entity for patch request"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Task updated"}, "404": {"description": "Task not found"}}}, "parameters": [{"description": "The task identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/tasks"], "summary": "Returns task", "operationId": "get_task", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Task entity"}}, "404": {"description": "Task not found"}}}, "delete": {"tags": ["v1/tasks"], "summary": "Delete a task given its identifier", "operationId": "delete_task", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Task deleted"}, "404": {"description": "Task not found"}}}}, "/v1/tutors/": {"get": {"tags": ["v1/tutors"], "summary": "Returns list of tutors", "operationId": "get_tutors_collection", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Tutor entity"}, "type": "array"}}}}, "post": {"tags": ["v1/tutors"], "summary": "Create tutor", "operationId": "post_tutors_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tutor for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Tutor entity"}}, "201": {"description": "Tutor created."}}}}, "/v1/tutors/{id}": {"patch": {"tags": ["v1/tutors"], "summary": "Update tutor given only its parameters that should be updated", "operationId": "patch_tutor", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tutor entity for patch request"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Tutor entity"}}, "404": {"description": "Tutor not found"}, "201": {"description": "Tutor updated"}}}, "parameters": [{"description": "The tutor identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/tutors"], "summary": "Returns tutor", "operationId": "get_tutor", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Tutor entity"}}, "404": {"description": "Tutor not found"}}}, "delete": {"tags": ["v1/tutors"], "summary": "Delete a tutor given its identifier", "operationId": "delete_tutor", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Tutor deleted"}, "404": {"description": "Tutor not found"}}}}, "/v1/tutors/{id}/children": {"parameters": [{"description": "The tutor identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/tutors"], "operationId": "get_tutor_children", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Child entity"}, "type": "array"}}, "404": {"description": "Tutor not found"}}}}, "/v1/tutors/{id}/invitations": {"parameters": [{"description": "The tutor identifier", "name": "id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/tutors"], "summary": "Returns list of invitations", "operationId": "get_tutor_invitations_collection", "parameters": [{"description": "For filtering by status of invitation", "name": "status", "type": "string", "in": "query"}, {"description": "For filtering by type of invitation", "name": "kind", "type": "string", "in": "query"}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Invitation entity"}, "type": "array"}}, "404": {"description": "Tutor not found"}}}, "post": {"tags": ["v1/tutors"], "summary": "Create invitations", "operationId": "post_tutor_invitations_collection", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tutor invitation for post"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Invitation entity"}}, "404": {"description": "Tutor not found"}, "201": {"description": "Invitation created."}}}}, "/v1/tutors/{tutor_id}/invitations/{invitation_id}": {"patch": {"tags": ["v1/tutors"], "summary": "Update status of invitation", "operationId": "patch_tutor_invitation", "parameters": [{"name": "payload", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Invitation for patch"}}], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Invitation updated"}, "404": {"description": "Tutor not found"}}}, "parameters": [{"description": "The tutor identifier", "name": "tutor_id", "required": true, "type": "integer", "in": "path"}, {"description": "The invitation identifier", "name": "invitation_id", "required": true, "type": "integer", "in": "path"}], "get": {"tags": ["v1/tutors"], "summary": "Return invitation", "operationId": "get_tutor_invitation", "responses": {"400": {"description": "Bad request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Invitation entity"}}, "404": {"description": "Tutor not found"}}}, "delete": {"tags": ["v1/tutors"], "summary": "Delete an invitation given its identifier", "operationId": "delete_tutor_invitation", "responses": {"400": {"description": "Bad request"}, "204": {"description": "Invitation deleted"}, "404": {"description": "Tutor not found"}}}}}, "produces": ["application/json"], "definitions": {"Tutor entity": {"required": ["mail", "password"], "type": "object", "properties": {"password": {"description": "Tutor password", "type": "string", "minLength": 12}, "login": {"description": "Tutor login", "type": "string"}, "mail": {"description": "Tutor e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "id": {"description": "Id of tutor", "type": "integer"}}}, "Notification for post": {"required": ["content"], "type": "object", "properties": {"content": {"description": "Content of notification", "type": "string"}}}, "Task for post": {"required": ["avatar_id", "content", "experience", "reward", "tutor_id"], "type": "object", "properties": {"experience": {"description": "Experience to be gained after completing task", "minimum": 0, "maximum": 100, "type": "integer"}, "tutor_id": {"description": "Id of tutor who was gave the task", "type": "integer"}, "reward": {"description": "Money reward after completing task", "minimum": 0, "type": "integer"}, "avatar_id": {"description": "Id of avatar who was given this task", "type": "integer"}, "content": {"description": "Description of task", "type": "string"}}}, "Invitation for patch": {"properties": {"status": {"description": "Status of invitation", "enum": ["pending", "accepted"], "example": "pending", "type": "string"}}, "type": "object"}, "Child invitation for post": {"required": ["kind", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Tutor id", "type": "integer"}, "kind": {"description": "Type of invitation", "enum": ["child-avatar", "child", "tutor", "tutor-avatar"], "example": "child-avatar", "type": "string"}}}, "Child entity": {"required": ["login", "mail", "nickname", "password"], "type": "object", "properties": {"password": {"description": "Child password", "type": "string", "minLength": 12}, "login": {"description": "Child login", "type": "string"}, "nickname": {"description": "Child nickname", "type": "string"}, "mail": {"description": "Child e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "id": {"description": "Id of child", "type": "integer"}}}, "Tutor for post": {"required": ["mail", "password"], "type": "object", "properties": {"password": {"description": "Tutor password", "type": "string", "minLength": 12}, "login": {"description": "Tutor login", "type": "string"}, "mail": {"description": "Tutor e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}}}, "Full notification": {"required": ["avatar_id", "content"], "type": "object", "properties": {"avatar_id": {"description": "Id of avatar who has that notification", "type": "integer"}, "id": {"description": "Id of notification", "type": "integer"}, "content": {"description": "Content of notification", "type": "string"}}}, "Item entity for patch request": {"properties": {"price": {"description": "Item price", "minimum": 0, "type": "integer"}, "clazz": {"description": "Item class", "enum": ["wornByDefault", "allclazzes", "human", "empty", "king", "mage", "cowboy"], "example": "wornByDefault", "type": "string"}, "level": {"description": "Item level. Item is available from this level.", "minimum": 0, "type": "integer"}, "imgSrc": {"description": "Path to item image", "type": "string"}, "iconSrc": {"description": "Path to item icon", "type": "string"}, "type": {"description": "Item type", "enum": ["shoes", "sock", "prop_right", "prop_left", "misc_neck", "misc_ear", "misc_head", "top_bottom", "bottom", "top", "animal", "hair_back", "hair_front", "mouth", "nose", "eyes"], "example": "shoes", "type": "string"}}, "type": "object"}, "Avatar-Item entity": {"required": ["avatar_id", "item_id", "state"], "type": "object", "properties": {"item_id": {"description": "Item id", "type": "integer"}, "state": {"description": "State of item (on, bought, available, unavailable)", "enum": ["worn", "canBePutOn", "canBePurchased", "unavailable"], "example": "worn", "type": "string"}, "id": {"description": "Id of avatar-item", "type": "integer"}, "avatar_id": {"description": "Avatar id", "type": "integer"}}}, "Errors fields": {"required": ["code", "message"], "type": "object", "properties": {"code": {"description": "HTTP status code", "type": "integer"}, "message": {"description": "Error message", "type": "string"}}}, "Child for post": {"required": ["login", "mail", "nickname", "password"], "type": "object", "properties": {"password": {"description": "Child password", "type": "string", "minLength": 12}, "login": {"description": "Child login", "type": "string"}, "nickname": {"description": "Child nickname", "type": "string"}, "mail": {"description": "Child e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}}}, "Item entity": {"required": ["clazz", "iconSrc", "imgSrc", "level", "price", "type"], "type": "object", "properties": {"price": {"description": "Item price", "minimum": 0, "type": "integer"}, "clazz": {"description": "Item class", "enum": ["wornByDefault", "allclazzes", "human", "empty", "king", "mage", "cowboy"], "example": "wornByDefault", "type": "string"}, "level": {"description": "Item level. Item is available from this level.", "minimum": 0, "type": "integer"}, "imgSrc": {"description": "Path to item image", "type": "string"}, "iconSrc": {"description": "Path to item icon", "type": "string"}, "type": {"description": "Item type", "enum": ["shoes", "sock", "prop_right", "prop_left", "misc_neck", "misc_ear", "misc_head", "top_bottom", "bottom", "top", "animal", "hair_back", "hair_front", "mouth", "nose", "eyes"], "example": "shoes", "type": "string"}, "id": {"description": "Id of item", "type": "integer"}}}, "Avatar for post": {"required": ["child_id", "clazz", "health", "level", "money", "name", "tutor_id"], "type": "object", "properties": {"clazz": {"description": "Avatar class", "enum": ["human", "king", "mage", "cowboy"], "example": "human", "type": "string"}, "tutor_id": {"description": "Id of tutors related to avatar", "type": "integer"}, "level": {"description": "Avatar level", "minimum": 0, "type": "integer"}, "money": {"description": "Avatar money", "minimum": 0, "type": "integer"}, "child_id": {"description": "Id of avatars owner (child)", "type": "integer"}, "name": {"description": "Avatar name", "type": "string"}, "experience": {"description": "Avatar experience points", "minimum": 0, "maximum": 100, "type": "integer"}, "health": {"description": "Avatar health", "minimum": 0, "maximum": 100, "type": "integer"}}}, "Tutor invitation for post": {"required": ["child_id", "kind"], "type": "object", "properties": {"child_id": {"description": "Child id", "type": "integer"}, "kind": {"description": "Type of invitation", "enum": ["child-avatar", "child", "tutor", "tutor-avatar"], "example": "child-avatar", "type": "string"}}}, "Item for post": {"required": ["clazz", "iconSrc", "imgSrc", "level", "price", "type"], "type": "object", "properties": {"price": {"description": "Item price", "minimum": 0, "type": "integer"}, "clazz": {"description": "Item class", "enum": ["wornByDefault", "allclazzes", "human", "empty", "king", "mage", "cowboy"], "example": "wornByDefault", "type": "string"}, "level": {"description": "Item level. Item is available from this level.", "minimum": 0, "type": "integer"}, "imgSrc": {"description": "Path to item image", "type": "string"}, "iconSrc": {"description": "Path to item icon", "type": "string"}, "type": {"description": "Item type", "enum": ["shoes", "sock", "prop_right", "prop_left", "misc_neck", "misc_ear", "misc_head", "top_bottom", "bottom", "top", "animal", "hair_back", "hair_front", "mouth", "nose", "eyes"], "example": "shoes", "type": "string"}}}, "Avatar entity": {"required": ["child_id", "clazz", "health", "level", "money", "name", "tutor_id", "update_invitation", "update_notification", "update_task"], "type": "object", "properties": {"update_task": {"description": "Flag indicating if update of task is required", "type": "boolean"}, "level": {"description": "Avatar level", "minimum": 0, "type": "integer"}, "update_notification": {"description": "Flag indicating if notification is required", "type": "boolean"}, "experience": {"description": "Avatar experience points", "minimum": 0, "maximum": 100, "type": "integer"}, "clazz": {"description": "Avatar class", "enum": ["human", "king", "mage", "cowboy"], "example": "human", "type": "string"}, "child_id": {"description": "Id of avatars owner (child)", "type": "integer"}, "name": {"description": "Avatar name", "type": "string"}, "money": {"description": "Avatar money", "minimum": 0, "type": "integer"}, "health": {"description": "Avatar health", "minimum": 0, "maximum": 100, "type": "integer"}, "update_invitation": {"description": "Flag indicating if invitations changed", "type": "boolean"}, "id": {"description": "Id of avatar", "type": "integer"}, "tutor_id": {"description": "Id of tutors related to avatar", "type": "integer"}}}, "Avatar-Item for post": {"required": ["avatar_id", "item_id", "state"], "type": "object", "properties": {"item_id": {"description": "Item id", "type": "integer"}, "state": {"description": "State of item (on, bought, available, unavailable)", "enum": ["worn", "canBePutOn", "canBePurchased", "unavailable"], "example": "worn", "type": "string"}, "avatar_id": {"description": "Avatar id", "type": "integer"}}}, "Tutor entity for patch request": {"properties": {"password": {"description": "Tutor password", "type": "string", "minLength": 12}, "mail": {"description": "Tutor e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}}, "type": "object"}, "Avatar entity for patch request": {"properties": {"update_task": {"description": "Flag indicating if update of task is required", "type": "boolean"}, "update_invitation": {"description": "Flag indicating if invitations changed", "type": "boolean"}, "child_id": {"description": "Id of avatars owner (child)", "type": "integer"}, "level": {"description": "Avatar level", "minimum": 0, "type": "integer"}, "money": {"description": "Avatar money", "minimum": 0, "type": "integer"}, "update_notification": {"description": "Flag indicating if notification is required", "type": "boolean"}, "name": {"description": "Avatar name", "type": "string"}, "experience": {"description": "Avatar experience points", "minimum": 0, "maximum": 100, "type": "integer"}, "health": {"description": "Avatar health", "minimum": 0, "maximum": 100, "type": "integer"}, "clazz": {"description": "Avatar class", "enum": ["human", "king", "mage", "cowboy"], "example": "human", "type": "string"}, "tutor_id": {"description": "Id of tutors related to avatar", "type": "integer"}}, "type": "object"}, "Avatar-Item entity for patch request": {"properties": {"item_id": {"description": "Item id", "type": "integer"}, "state": {"description": "State of item (worn, canBePutOn, canBePurchased, unavailable)", "enum": ["worn", "canBePutOn", "canBePurchased", "unavailable"], "example": "worn", "type": "string"}, "avatar_id": {"description": "Avatar id", "type": "integer"}}, "type": "object"}, "Notification for patch": {"properties": {"content": {"description": "Content of notification", "type": "string"}, "avatar_id": {"description": "Id of avatar who has that notification", "type": "integer"}}, "type": "object"}, "Task entity": {"required": ["avatar_id", "content", "experience", "reward", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Id of tutor who was gave the task", "type": "integer"}, "content": {"description": "Description of task", "type": "string"}, "experience": {"description": "Experience to be gained after completing task", "minimum": 0, "maximum": 100, "type": "integer"}, "reward": {"description": "Money reward after completing task", "minimum": 0, "type": "integer"}, "id": {"description": "Id of item", "type": "integer"}, "avatar_id": {"description": "Id of avatar who was given this task", "type": "integer"}}}, "Task entity for patch request": {"properties": {"experience": {"description": "Experience to be gained after completing task", "minimum": 0, "maximum": 100, "type": "integer"}, "tutor_id": {"description": "Id of tutor who was gave the task", "type": "integer"}, "reward": {"description": "Money reward after completing task", "minimum": 0, "type": "integer"}, "avatar_id": {"description": "Id of avatar who was given this task", "type": "integer"}, "content": {"description": "Description of task", "type": "string"}}, "type": "object"}, "Child entity for patch request": {"properties": {"password": {"description": "Child password", "type": "string", "minLength": 12}, "login": {"description": "Child login", "type": "string"}, "nickname": {"description": "Child nickname", "type": "string"}, "mail": {"description": "Child e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}}, "type": "object"}, "Invitation entity": {"required": ["child_id", "kind", "status", "tutor_id"], "type": "object", "properties": {"status": {"description": "Status of invitation", "enum": ["pending", "accepted"], "example": "pending", "type": "string"}, "child_id": {"description": "Child id", "type": "integer"}, "tutor_id": {"description": "Tutor id", "type": "integer"}, "id": {"description": "Id of item", "type": "integer"}, "kind": {"description": "Type of invitation", "enum": ["child-avatar", "child", "tutor", "tutor-avatar"], "example": "child-avatar", "type": "string"}}}}, "responses": {"IntegrityError": {"description": "Raised when the relational integrity of the database is affected, e", "schema": {"$ref": "#/definitions/Errors fields"}}, "MaskError": {"description": "When any error occurs on mask"}, "ParseError": {"description": "When a mask can't be parsed"}, "NoResultFound": {"description": "Raised when no result in database found", "schema": {"$ref": "#/definitions/Errors fields"}}}, "tags": [{"name": "default", "description": "Default namespace"}, {"name": "v1/children", "description": "Operations related to children"}, {"name": "v1/avatars", "description": "Operations related to avatars"}, {"name": "v1/tutors", "description": "Operations related to tutors"}, {"name": "v1/items", "description": "Operations related to items"}, {"name": "v1/tasks", "description": "Operations related to tasks"}, {"name": "v1/avatar-item-links", "description": "Operations related to avatar item links"}, {"name": "v1/documentation", "description": "Endpoint for getting documentation in json"}], "consumes": ["application/json"], "info": {"description": "API for Little Hero mobile application", "version": "1.2", "contact": {"name": "Dawid Jurkiewicz", "url": "https://github.com/siulkilulki", "email": "dawjur@st.amu.edu.pl"}, "title": "Little Hero API"}}