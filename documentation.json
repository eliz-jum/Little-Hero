{"swagger": "2.0", "tags": [{"description": "Default namespace", "name": "default"}, {"description": "Operations related to children", "name": "v1/children"}, {"description": "Operations related to avatars", "name": "v1/avatars"}, {"description": "Operations related to tutors", "name": "v1/tutors"}, {"description": "Operations related to items", "name": "v1/items"}, {"description": "Operations related to tasks", "name": "v1/tasks"}, {"description": "Operations related to avatar item links", "name": "v1/avatar-item-links"}, {"description": "Documentation", "name": "v1/documentation"}], "definitions": {"Avatar entity for patch request": {"type": "object", "properties": {"tutor_id": {"description": "Id of tutors related to avatar", "type": "integer"}, "level": {"description": "Avatar level", "type": "integer", "minimum": 0}, "update_invitation": {"description": "Flag indicating if invitations changed", "type": "boolean"}, "update_notification": {"description": "Flag indicating if notification is required", "type": "boolean"}, "health": {"maximum": 100, "description": "Avatar health", "type": "integer", "minimum": 0}, "child_id": {"description": "Id of avatars owner (child)", "type": "integer"}, "name": {"description": "Avatar name", "type": "string"}, "experience": {"maximum": 100, "description": "Avatar experience points", "type": "integer", "minimum": 0}, "money": {"description": "Avatar money", "type": "integer", "minimum": 0}, "update_task": {"description": "Flag indicating if update of task is required", "type": "boolean"}, "clazz": {"enum": ["human", "king", "mage", "cowboy"], "description": "Avatar class", "type": "string", "example": "human"}}}, "Invitation entity": {"required": ["child_id", "kind", "status", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Tutor id", "type": "integer"}, "kind": {"enum": ["child-avatar", "child", "tutor", "tutor-avatar"], "description": "Type of invitation", "type": "string", "example": "child-avatar"}, "id": {"description": "Id of item", "type": "integer"}, "status": {"enum": ["pending", "accepted"], "description": "Status of invitation", "type": "string", "example": "pending"}, "child_id": {"description": "Child id", "type": "integer"}}}, "Child entity for patch request": {"type": "object", "properties": {"mail": {"description": "Child e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "nickname": {"description": "Child nickname", "type": "string"}, "login": {"description": "Child login", "type": "string"}, "password": {"description": "Child password", "type": "string", "minLength": 12}}}, "Avatar-Item entity for patch request": {"type": "object", "properties": {"state": {"enum": ["worn", "canBePutOn", "canBePurchased", "unavailable"], "description": "State of item (worn, canBePutOn, canBePurchased, unavailable)", "type": "string", "example": "worn"}, "avatar_id": {"description": "Avatar id", "type": "integer"}, "item_id": {"description": "Item id", "type": "integer"}}}, "Tutor entity for patch request": {"type": "object", "properties": {"mail": {"description": "Tutor e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "password": {"description": "Tutor password", "type": "string", "minLength": 12}}}, "Invitation for patch": {"type": "object", "properties": {"status": {"enum": ["pending", "accepted"], "description": "Status of invitation", "type": "string", "example": "pending"}}}, "Tutor entity": {"required": ["mail", "password"], "type": "object", "properties": {"mail": {"description": "Tutor e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "password": {"description": "Tutor password", "type": "string", "minLength": 12}, "login": {"description": "Tutor login", "type": "string"}, "id": {"description": "Id of tutor", "type": "integer"}}}, "Task entity": {"required": ["avatar_id", "content", "experience", "reward", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Id of tutor who was gave the task", "type": "integer"}, "avatar_id": {"description": "Id of avatar who was given this task", "type": "integer"}, "reward": {"description": "Money reward after completing task", "type": "integer", "minimum": 0}, "experience": {"maximum": 100, "description": "Experience to be gained after completing task", "type": "integer", "minimum": 0}, "content": {"description": "Description of task", "type": "string"}, "id": {"description": "Id of item", "type": "integer"}}}, "Notification for post": {"required": ["content"], "type": "object", "properties": {"content": {"description": "Content of notification", "type": "string"}}}, "Child for post": {"required": ["login", "mail", "nickname", "password"], "type": "object", "properties": {"mail": {"description": "Child e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "nickname": {"description": "Child nickname", "type": "string"}, "login": {"description": "Child login", "type": "string"}, "password": {"description": "Child password", "type": "string", "minLength": 12}}}, "Full notification": {"required": ["avatar_id", "content"], "type": "object", "properties": {"avatar_id": {"description": "Id of avatar who has that notification", "type": "integer"}, "content": {"description": "Content of notification", "type": "string"}, "id": {"description": "Id of notification", "type": "integer"}}}, "Tutor for post": {"required": ["mail", "password"], "type": "object", "properties": {"mail": {"description": "Tutor e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "login": {"description": "Tutor login", "type": "string"}, "password": {"description": "Tutor password", "type": "string", "minLength": 12}}}, "Item entity for patch request": {"type": "object", "properties": {"level": {"description": "Item level. Item is available from this level.", "type": "integer", "minimum": 0}, "iconSrc": {"description": "Path to item icon", "type": "string"}, "price": {"description": "Item price", "type": "integer", "minimum": 0}, "clazz": {"enum": ["wornByDefault", "allclazzes", "human", "empty", "king", "mage", "cowboy"], "description": "Item class", "type": "string", "example": "wornByDefault"}, "type": {"enum": ["shoes", "sock", "prop_right", "prop_left", "misc_neck", "misc_ear", "misc_head", "top_bottom", "bottom", "top", "animal", "hair_back", "hair_front", "mouth", "nose", "eyes"], "description": "Item type", "type": "string", "example": "shoes"}, "imgSrc": {"description": "Path to item image", "type": "string"}}}, "Task for post": {"required": ["avatar_id", "content", "experience", "reward", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Id of tutor who was gave the task", "type": "integer"}, "avatar_id": {"description": "Id of avatar who was given this task", "type": "integer"}, "content": {"description": "Description of task", "type": "string"}, "reward": {"description": "Money reward after completing task", "type": "integer", "minimum": 0}, "experience": {"maximum": 100, "description": "Experience to be gained after completing task", "type": "integer", "minimum": 0}}}, "Avatar-Item for post": {"required": ["avatar_id", "item_id", "state"], "type": "object", "properties": {"state": {"enum": ["worn", "canBePutOn", "canBePurchased", "unavailable"], "description": "State of item (on, bought, available, unavailable)", "type": "string", "example": "worn"}, "avatar_id": {"description": "Avatar id", "type": "integer"}, "item_id": {"description": "Item id", "type": "integer"}}}, "Avatar entity": {"required": ["child_id", "clazz", "health", "level", "money", "name", "tutor_id", "update_invitation", "update_notification", "update_task"], "type": "object", "properties": {"tutor_id": {"description": "Id of tutors related to avatar", "type": "integer"}, "level": {"description": "Avatar level", "type": "integer", "minimum": 0}, "health": {"maximum": 100, "description": "Avatar health", "type": "integer", "minimum": 0}, "child_id": {"description": "Id of avatars owner (child)", "type": "integer"}, "experience": {"maximum": 100, "description": "Avatar experience points", "type": "integer", "minimum": 0}, "update_task": {"description": "Flag indicating if update of task is required", "type": "boolean"}, "clazz": {"enum": ["human", "king", "mage", "cowboy"], "description": "Avatar class", "type": "string", "example": "human"}, "money": {"description": "Avatar money", "type": "integer", "minimum": 0}, "update_notification": {"description": "Flag indicating if notification is required", "type": "boolean"}, "id": {"description": "Id of avatar", "type": "integer"}, "name": {"description": "Avatar name", "type": "string"}, "update_invitation": {"description": "Flag indicating if invitations changed", "type": "boolean"}}}, "Item entity": {"required": ["clazz", "iconSrc", "imgSrc", "level", "price", "type"], "type": "object", "properties": {"level": {"description": "Item level. Item is available from this level.", "type": "integer", "minimum": 0}, "iconSrc": {"description": "Path to item icon", "type": "string"}, "id": {"description": "Id of item", "type": "integer"}, "price": {"description": "Item price", "type": "integer", "minimum": 0}, "clazz": {"enum": ["wornByDefault", "allclazzes", "human", "empty", "king", "mage", "cowboy"], "description": "Item class", "type": "string", "example": "wornByDefault"}, "type": {"enum": ["shoes", "sock", "prop_right", "prop_left", "misc_neck", "misc_ear", "misc_head", "top_bottom", "bottom", "top", "animal", "hair_back", "hair_front", "mouth", "nose", "eyes"], "description": "Item type", "type": "string", "example": "shoes"}, "imgSrc": {"description": "Path to item image", "type": "string"}}}, "Item for post": {"required": ["clazz", "iconSrc", "imgSrc", "level", "price", "type"], "type": "object", "properties": {"level": {"description": "Item level. Item is available from this level.", "type": "integer", "minimum": 0}, "iconSrc": {"description": "Path to item icon", "type": "string"}, "price": {"description": "Item price", "type": "integer", "minimum": 0}, "clazz": {"enum": ["wornByDefault", "allclazzes", "human", "empty", "king", "mage", "cowboy"], "description": "Item class", "type": "string", "example": "wornByDefault"}, "type": {"enum": ["shoes", "sock", "prop_right", "prop_left", "misc_neck", "misc_ear", "misc_head", "top_bottom", "bottom", "top", "animal", "hair_back", "hair_front", "mouth", "nose", "eyes"], "description": "Item type", "type": "string", "example": "shoes"}, "imgSrc": {"description": "Path to item image", "type": "string"}}}, "Child invitation for post": {"required": ["kind", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Tutor id", "type": "integer"}, "kind": {"enum": ["child-avatar", "child", "tutor", "tutor-avatar"], "description": "Type of invitation", "type": "string", "example": "child-avatar"}}}, "Child entity": {"required": ["login", "mail", "nickname", "password"], "type": "object", "properties": {"mail": {"description": "Child e-mail", "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", "type": "string"}, "password": {"description": "Child password", "type": "string", "minLength": 12}, "nickname": {"description": "Child nickname", "type": "string"}, "login": {"description": "Child login", "type": "string"}, "id": {"description": "Id of child", "type": "integer"}}}, "Tutor invitation for post": {"required": ["child_id", "kind"], "type": "object", "properties": {"kind": {"enum": ["child-avatar", "child", "tutor", "tutor-avatar"], "description": "Type of invitation", "type": "string", "example": "child-avatar"}, "child_id": {"description": "Child id", "type": "integer"}}}, "Avatar for post": {"required": ["child_id", "clazz", "health", "level", "money", "name", "tutor_id"], "type": "object", "properties": {"tutor_id": {"description": "Id of tutors related to avatar", "type": "integer"}, "level": {"description": "Avatar level", "type": "integer", "minimum": 0}, "health": {"maximum": 100, "description": "Avatar health", "type": "integer", "minimum": 0}, "child_id": {"description": "Id of avatars owner (child)", "type": "integer"}, "experience": {"maximum": 100, "description": "Avatar experience points", "type": "integer", "minimum": 0}, "name": {"description": "Avatar name", "type": "string"}, "money": {"description": "Avatar money", "type": "integer", "minimum": 0}, "clazz": {"enum": ["human", "king", "mage", "cowboy"], "description": "Avatar class", "type": "string", "example": "human"}}}, "Notification for patch": {"type": "object", "properties": {"avatar_id": {"description": "Id of avatar who has that notification", "type": "integer"}, "content": {"description": "Content of notification", "type": "string"}}}, "Task entity for patch request": {"type": "object", "properties": {"tutor_id": {"description": "Id of tutor who was gave the task", "type": "integer"}, "avatar_id": {"description": "Id of avatar who was given this task", "type": "integer"}, "content": {"description": "Description of task", "type": "string"}, "reward": {"description": "Money reward after completing task", "type": "integer", "minimum": 0}, "experience": {"maximum": 100, "description": "Experience to be gained after completing task", "type": "integer", "minimum": 0}}}, "Avatar-Item entity": {"required": ["avatar_id", "item_id", "state"], "type": "object", "properties": {"state": {"enum": ["worn", "canBePutOn", "canBePurchased", "unavailable"], "description": "State of item (on, bought, available, unavailable)", "type": "string", "example": "worn"}, "avatar_id": {"description": "Avatar id", "type": "integer"}, "id": {"description": "Id of avatar-item", "type": "integer"}, "item_id": {"description": "Item id", "type": "integer"}}}}, "securityDefinitions": {"Basic": {"in": "header", "type": "basic", "name": "Authorization"}}, "paths": {"/v1/tutors/{id}/children": {"get": {"tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Child entity"}, "type": "array"}, "description": "Success"}, "404": {"description": "Tutor not found"}}, "operationId": "get_tutor_children"}, "parameters": [{"in": "path", "required": true, "description": "The tutor identifier", "type": "integer", "name": "id"}]}, "/v1/avatars/": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Avatar for post"}, "required": true, "name": "payload"}], "summary": "Create avatar", "tags": ["v1/avatars"], "responses": {"201": {"description": "Avatar created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Avatar entity"}, "description": "Success"}}, "operationId": "post_avatars_collection"}, "get": {"parameters": [{"in": "query", "description": "For filtering by tutor id", "type": "string", "name": "tutor_id"}, {"in": "query", "description": "For filtering by child id", "type": "string", "name": "child_id"}], "summary": "Returns list of avatars or filtered list of avatars given child id or tutor id", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Avatar entity"}, "type": "array"}, "description": "Success"}}, "operationId": "get_avatars_collection"}}, "/v1/avatars/{id}": {"get": {"summary": "Returns avatar", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Avatar entity"}, "description": "Success"}, "404": {"description": "Avatar not found"}}, "operationId": "get_avatar"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Avatar entity for patch request"}, "required": true, "name": "payload"}], "summary": "Update Avatar given only its parameters that should be updated", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Avatar updated"}, "404": {"description": "Avatar not found"}}, "operationId": "patch_avatar"}, "parameters": [{"in": "path", "required": true, "description": "The avatar identifier", "type": "integer", "name": "id"}], "delete": {"summary": "Delete a avatar given its identifier", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Avatar deleted"}, "404": {"description": "Avatar not found"}}, "operationId": "delete_avatar"}}, "/v1/avatars/{avatar_id}/notifications": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Notification for post"}, "required": true, "name": "payload"}], "summary": "Create notifications", "tags": ["v1/avatars"], "responses": {"201": {"description": "Notification created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Full notification"}, "description": "Success"}, "404": {"description": "Avatar not found"}}, "operationId": "post_avatar_notifications_collection"}, "get": {"summary": "Returns list of notifications", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Full notification"}, "type": "array"}, "description": "Success"}, "404": {"description": "Avatar not found"}}, "operationId": "get_avatar_notifications_collection"}, "parameters": [{"in": "path", "required": true, "description": "The avatar identifier", "type": "integer", "name": "avatar_id"}]}, "/v1/children/{id}/tutors": {"get": {"tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Tutor entity"}, "type": "array"}, "description": "Success"}, "404": {"description": "Child not found"}}, "operationId": "get_child_tutors"}, "parameters": [{"in": "path", "required": true, "description": "The child identifier", "type": "integer", "name": "id"}]}, "/v1/documentation/": {"get": {"tags": ["v1/documentation"], "responses": {"200": {"description": "Success"}}, "operationId": "get_documentation"}}, "/v1/tutors/{id}": {"get": {"summary": "Returns tutor", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Tutor entity"}, "description": "Success"}, "404": {"description": "Tutor not found"}}, "operationId": "get_tutor"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Tutor entity for patch request"}, "required": true, "name": "payload"}], "summary": "Update tutor given only its parameters that should be updated", "tags": ["v1/tutors"], "responses": {"201": {"description": "Tutor updated"}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Tutor entity"}, "description": "Success"}, "404": {"description": "Tutor not found"}}, "operationId": "patch_tutor"}, "parameters": [{"in": "path", "required": true, "description": "The tutor identifier", "type": "integer", "name": "id"}], "delete": {"summary": "Delete a tutor given its identifier", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Tutor deleted"}, "404": {"description": "Tutor not found"}}, "operationId": "delete_tutor"}}, "/v1/tasks/{id}": {"get": {"summary": "Returns task", "tags": ["v1/tasks"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Task entity"}, "description": "Success"}, "404": {"description": "Task not found"}}, "operationId": "get_task"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Task entity for patch request"}, "required": true, "name": "payload"}], "summary": "Update task given only its parameters that should be updated", "tags": ["v1/tasks"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Task updated"}, "404": {"description": "Task not found"}}, "operationId": "patch_task"}, "parameters": [{"in": "path", "required": true, "description": "The task identifier", "type": "integer", "name": "id"}], "delete": {"summary": "Delete a task given its identifier", "tags": ["v1/tasks"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Task deleted"}, "404": {"description": "Task not found"}}, "operationId": "delete_task"}}, "/v1/tutors/{tutor_id}/invitations/{invitation_id}": {"get": {"summary": "Return invitation", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Invitation entity"}, "description": "Success"}, "404": {"description": "Tutor not found"}}, "operationId": "get_tutor_invitation"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Invitation for patch"}, "required": true, "name": "payload"}], "summary": "Update status of invitation", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Invitation updated"}, "404": {"description": "Tutor not found"}}, "operationId": "patch_tutor_invitation"}, "parameters": [{"in": "path", "required": true, "description": "The tutor identifier", "type": "integer", "name": "tutor_id"}, {"in": "path", "required": true, "description": "The invitation identifier", "type": "integer", "name": "invitation_id"}], "delete": {"summary": "Delete an invitation given its identifier", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Invitation deleted"}, "404": {"description": "Tutor not found"}}, "operationId": "delete_tutor_invitation"}}, "/v1/children/{child_id}/invitations/{invitation_id}": {"get": {"summary": "Return invitation", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Invitation entity"}, "description": "Success"}, "404": {"description": "Child not found"}}, "operationId": "get_child_invitation"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Invitation for patch"}, "required": true, "name": "payload"}], "summary": "Update status of invitation", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Invitation updated"}, "404": {"description": "Child not found"}}, "operationId": "patch_child_invitation"}, "parameters": [{"in": "path", "required": true, "description": "The invitation identifier", "type": "integer", "name": "invitation_id"}, {"in": "path", "required": true, "description": "The child identifier", "type": "integer", "name": "child_id"}], "delete": {"summary": "Delete an invitation given its identifier", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Invitation deleted"}, "404": {"description": "Child not found"}}, "operationId": "delete_child_invitation"}}, "/v1/tutors/{id}/invitations": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Tutor invitation for post"}, "required": true, "name": "payload"}], "summary": "Create invitations", "tags": ["v1/tutors"], "responses": {"201": {"description": "Invitation created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Invitation entity"}, "description": "Success"}, "404": {"description": "Tutor not found"}}, "operationId": "post_tutor_invitations_collection"}, "get": {"parameters": [{"in": "query", "description": "For filtering by type of invitation", "type": "string", "name": "kind"}, {"in": "query", "description": "For filtering by status of invitation", "type": "string", "name": "status"}], "summary": "Returns list of invitations", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Invitation entity"}, "type": "array"}, "description": "Success"}, "404": {"description": "Tutor not found"}}, "operationId": "get_tutor_invitations_collection"}, "parameters": [{"in": "path", "required": true, "description": "The tutor identifier", "type": "integer", "name": "id"}]}, "/v1/children/{id}": {"get": {"security": [{"Basic": []}], "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Child entity"}, "description": "Success"}, "404": {"description": "Child not found"}}, "summary": "Returns child", "operationId": "get_child"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Child entity for patch request"}, "required": true, "name": "payload"}], "summary": "Update child given only its parameters that should be updated", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Child updated"}, "404": {"description": "Child not found"}}, "operationId": "patch_child"}, "parameters": [{"in": "path", "required": true, "description": "The child identifier", "type": "integer", "name": "id"}], "delete": {"summary": "Delete a child given its identifier", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Child deleted"}, "404": {"description": "Child not found"}}, "operationId": "delete_child"}}, "/v1/avatar-item-links/": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Avatar-Item for post"}, "required": true, "name": "payload"}], "summary": "Create avatar", "tags": ["v1/avatar-item-links"], "responses": {"201": {"description": "Avatar-Item link created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Avatar-Item entity"}, "description": "Success"}}, "operationId": "post_avatar_item_collection"}, "get": {"parameters": [{"in": "query", "description": "For filtering by item state", "type": "string", "name": "state"}, {"in": "query", "description": "For filtering by avatar id", "type": "string", "name": "avatar_id"}, {"in": "query", "description": "For filtering by item id", "type": "string", "name": "item_id"}], "summary": "Returns list of avatar-item links or filtered list of links given avatar id or item id", "tags": ["v1/avatar-item-links"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Avatar-Item entity"}, "type": "array"}, "description": "Success"}}, "operationId": "get_avatar_item_collection"}}, "/v1/tasks/": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Task for post"}, "required": true, "name": "payload"}], "summary": "Create task", "tags": ["v1/tasks"], "responses": {"201": {"description": "task created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Task entity"}, "description": "Success"}}, "operationId": "post_tasks_collection"}, "get": {"parameters": [{"in": "query", "description": "For filtering by tutor id", "type": "string", "name": "tutor_id"}, {"in": "query", "description": "For filtering by avatar id", "type": "string", "name": "avatar_id"}], "summary": "Returns list of tasks or filtered list of task given avatar id or tutor id", "tags": ["v1/tasks"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Task entity"}, "type": "array"}, "description": "Success"}}, "operationId": "get_tasks_collection"}}, "/v1/children/{id}/invitations": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Child invitation for post"}, "required": true, "name": "payload"}], "summary": "Create invitations", "tags": ["v1/children"], "responses": {"201": {"description": "Invitation created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Invitation entity"}, "description": "Success"}, "404": {"description": "Child not found"}}, "operationId": "post_child_invitations_collection"}, "get": {"parameters": [{"in": "query", "description": "For filtering by type of invitation", "type": "string", "name": "kind"}, {"in": "query", "description": "For filtering by status of invitation", "type": "string", "name": "status"}], "summary": "Returns list of invitations", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Invitation entity"}, "type": "array"}, "description": "Success"}, "404": {"description": "Child not found"}}, "operationId": "get_child_invitations_collection"}, "parameters": [{"in": "path", "required": true, "description": "The child identifier", "type": "integer", "name": "id"}]}, "/v1/tutors/": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Tutor for post"}, "required": true, "name": "payload"}], "summary": "Create tutor", "tags": ["v1/tutors"], "responses": {"201": {"description": "Tutor created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Tutor entity"}, "description": "Success"}}, "operationId": "post_tutors_collection"}, "get": {"summary": "Returns list of tutors", "tags": ["v1/tutors"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Tutor entity"}, "type": "array"}, "description": "Success"}}, "operationId": "get_tutors_collection"}}, "/v1/items/{id}": {"get": {"summary": "Returns item", "tags": ["v1/items"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Item entity"}, "description": "Success"}, "404": {"description": "Item not found"}}, "operationId": "get_item"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Item entity for patch request"}, "required": true, "name": "payload"}], "summary": "Update item given only its parameters that should be updated", "tags": ["v1/items"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "item updated"}, "404": {"description": "Item not found"}}, "operationId": "patch_item"}, "parameters": [{"in": "path", "required": true, "description": "The item identifier", "type": "integer", "name": "id"}], "delete": {"summary": "Delete a item given its identifier", "tags": ["v1/items"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "item deleted"}, "404": {"description": "Item not found"}}, "operationId": "delete_item"}}, "/v1/items/": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Item for post"}, "required": true, "name": "payload"}], "summary": "Create item", "tags": ["v1/items"], "responses": {"201": {"description": "Item created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Item entity"}, "description": "Success"}}, "operationId": "post_items_collection"}, "get": {"summary": "Returns list of items", "tags": ["v1/items"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Item entity"}, "type": "array"}, "description": "Success"}}, "operationId": "get_items_collection"}, "put": {"parameters": [{"in": "body", "schema": {"items": {"$ref": "#/definitions/Item for post"}, "type": "array"}, "required": true, "name": "payload"}], "summary": "Bulk update items", "tags": ["v1/items"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "No content"}}, "operationId": "put_items_collection"}}, "/v1/avatars/{avatar_id}/notifications/{notification_id}": {"get": {"summary": "Return notification", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Full notification"}, "description": "Success"}, "404": {"description": "Avatar or notification not found"}}, "operationId": "get_avatar_notification"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Notification for patch"}, "required": true, "name": "payload"}], "summary": "Update status of notification", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Notification updated"}, "404": {"description": "Avatar or notification not found"}}, "operationId": "patch_avatar_notification"}, "parameters": [{"in": "path", "required": true, "description": "The notification identifier", "type": "integer", "name": "notification_id"}, {"in": "path", "required": true, "description": "The avatar identifier", "type": "integer", "name": "avatar_id"}], "delete": {"summary": "Delete an notification given its identifier", "tags": ["v1/avatars"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Notification deleted"}, "404": {"description": "Avatar or notification not found"}}, "operationId": "delete_avatar_notification"}}, "/v1/children/token": {"get": {"tags": ["v1/children"], "security": [{"Basic": []}], "parameters": [{"in": "header", "type": "string", "name": "Authorization"}], "summary": "Get token for authentication", "responses": {"400": {"description": "Bad request"}}, "operationId": "get_child_security"}}, "/v1/avatar-item-links/{id}": {"get": {"summary": "Returns avatar-item entity", "tags": ["v1/avatar-item-links"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Avatar-Item entity"}, "description": "Success"}, "404": {"description": "Avatar-Item link not found"}}, "operationId": "get_avatar_item"}, "patch": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Avatar-Item entity for patch request"}, "required": true, "name": "payload"}], "summary": "Update avatar_item entity given only its parameters that should be updated", "tags": ["v1/avatar-item-links"], "responses": {"400": {"description": "Bad request"}, "200": {"description": "Avatar-Item updated"}, "404": {"description": "Avatar-Item link not found"}}, "operationId": "patch_avatar_item"}, "parameters": [{"in": "path", "required": true, "description": "The avatar identifier", "type": "integer", "name": "id"}], "delete": {"summary": "Delete a avatar-item entity given its identifier", "tags": ["v1/avatar-item-links"], "responses": {"400": {"description": "Bad request"}, "204": {"description": "Avatar-Item deleted"}, "404": {"description": "Avatar-Item link not found"}}, "operationId": "delete_avatar_item"}}, "/v1/children/": {"post": {"parameters": [{"in": "body", "schema": {"$ref": "#/definitions/Child for post"}, "required": true, "name": "payload"}], "summary": "Create child", "tags": ["v1/children"], "responses": {"201": {"description": "Child created."}, "400": {"description": "Bad request"}, "200": {"schema": {"$ref": "#/definitions/Child entity"}, "description": "Success"}}, "operationId": "post_children_collection"}, "get": {"summary": "Returns list of children", "tags": ["v1/children"], "responses": {"400": {"description": "Bad request"}, "200": {"schema": {"items": {"$ref": "#/definitions/Child entity"}, "type": "array"}, "description": "Success"}}, "operationId": "get_children_collection"}}}, "produces": ["application/json"], "basePath": "/api", "security": [{"Basic": []}], "responses": {"IntegrityError": {}, "MaskError": {"description": "When any error occurs on mask"}, "ParseError": {"description": "When a mask can't be parsed"}, "NoResultFound": {}}, "consumes": ["application/json"], "info": {"title": "Little Hero API", "version": "1.2", "description": "Little Hero API for Little Hero mobile application", "contact": {"url": null, "email": "dawjur@st.amu.edu.pl", "name": "Dawid Jurkiewicz"}}}